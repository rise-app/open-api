openapi: 3.0.0
servers:
  - description: RiSE Sandbox
    url: https://api.sandbox.rise.store
info:
  version: "1.0.0"
  title: RiSE Channel API
  description: |
    Welcome to the RiSE Channel API! This API allows you to connect to Channels from your website or application.
  contact:
    email: scott@rise.store
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: super
    description: Secured Operations available to RiSE Admin user role
  - name: admins
    description: Secured Operations available to Channel Admin user role
  - name: managers
    description: Secured Operations available to Channel Manager user role
  - name: registered
    description: Secured Operations available to Channel Registered user role
  - name: public
    description: Operations available to public connections

paths:
  # Channels Endpoint
  '/api/v1/channels':
    get:
      tags:
        - admins
        - managers
      summary: list channels
      operationId: channel.list
      description: |
        By passing in the appropriate options, list
        available Channels
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: query
          name: where
          description: pass an optional where query for looking up a channel
          required: false
          schema:
            $ref: '#/components/schemas/ChannelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
    post:
      tags:
        - admins
        - managers
      summary: create a channel
      operationId: create.channel
      description: |
        This Action Creates a root RiSE Channel, the primary entry point for all other commands. See Schemas Channel for full description.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      # parameters:
      requestBody:
        description: Channel to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelRequest'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION

  # Channels by UUID endpoints
  '/api/v1/channels/{channel_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get channel
      operationId: channel.get
      description: |
        Get a RiSE Channel by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    put:
      tags:
        - admins
        - managers
      summary: update channel
      operationId: update.channel
      description: |
        Update a RiSE Channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: A JSON object containing channel information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUpdateCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/parent':
    get:
      tags:
        - super
        - admins
      summary: get channel parent
      operationId: channel.parent.get
      description: |
        Get a RiSE Channel\'s parent Channel by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/ancestors':
    get:
      tags:
        - super
        - admins
      summary: get channel ancestors
      operationId: channel.ancestors.list
      description: |
        Get a RiSE Channel\'s ancestor Channels by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/children':
    get:
      tags:
        - admins
        - managers
      summary: get channel children
      operationId: channel.children.list
      description: |
        Get a RiSE Channel\'s children Channels by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel
          required: false
          schema:
            $ref: '#/components/schemas/ChannelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/descendents':
    get:
      tags:
        - admins
        - managers
      summary: get channel descendents
      operationId: channel.descendents.list
      description: |
        Get a RiSE Channel\'s descendent Channels by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel
          required: false
          schema:
            $ref: '#/components/schemas/ChannelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  # Channel User Authorization Endpoints
  '/api/v1/channels/{channel_uuid}/auth/local/register':
    post:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: register user to channel
      operationId: register.channel.user
      description: |
        Authorization Endpoint to register a new user to an available channel.
      security:
        - ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: A JSON object containing channel user information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUserRegister'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserRegisteredCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/auth/local':
    post:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: login user to channel
      operationId: login.channel.user
      description: |
        Authorization Endpoint to login an existing user to an available channel.
      security:
        - ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: A JSON object containing channel user authorization information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUserLogin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserSessionRequestResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/auth/local/recover':
    post:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: recover user's account
      operationId: recover.channel.user
      description: |
        Authorization Endpoint to recover an existing user's channel authorizaion
      security:
        - ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: A JSON object containing channel user authorization information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUserRecover'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserRecoverCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/auth/session':
    get:
      tags:
        - admins
        - managers
        - registered
      summary: get user's session includes
      operationId: channel.session
      description: |
        Authorization Endpoint to get an existing user's session on an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserSessionRequestResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/auth/session/user':
    get:
      tags:
        - admins
        - managers
        - registered
      summary: get user's session user
      operationId: channel.session.user.get
      description: |
        Authorization Endpoint to get an existing user's session user account on an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserSessionUserRequestResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/auth/session/cart':
    get:
      tags:
        - admins
        - managers
        - registered
      summary: get user's session cart
      operationId: channel.session.cart.get
      description: |
        Authorization Endpoint to get an existing user's session channel cart on an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserSessionCartRequestResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL


  '/api/v1/channels/{channel_uuid}/auth/session/customer':
    get:
      tags:
        - admins
        - managers
        - registered
      summary: get user's session customer
      operationId: channel.session.customer.get
      description: |
        Authorization Endpoint to get an existing user's session channel customer on an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserSessionCustomerRequestResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/auth/session/roles':
    get:
      tags:
        - admins
        - managers
        - registered
      summary: get user's session roles
      operationId: channel.session.role.list
      description: |
        Authorization Endpoint to list an existing user's session channel roles on an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserSessionRolesRequestResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL


  # Channel User Endpoints
  '/api/v1/channels/{channel_uuid}/users':
    get:
      tags:
        - admins
        - managers
      summary: list users
      operationId: channel.user.list
      description: |
        List users of an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a user
          required: false
          schema:
            $ref: '#/components/schemas/ChannelUserWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: add channel user
      operationId: add.channel.user
      description: |
        Add existing user to an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/users/{user_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel user
      operationId: channel.user.get
      description: |
        Get available user of an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: user_uuid
          required: true
          description: user uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_USER
  '/api/v1/users/{user_uuid}/channels':
    get:
      tags:
        - admins
        - managers
      summary: list user's channels
      operationId: channel.user.channel.list
      description: |
        List available channels of an available user.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: user_uuid
          required: true
          description: user uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel
          required: false
          schema:
            $ref: '#/components/schemas/ChannelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelUserChannelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_USER

  # Channel Customer Endpoints
  '/api/v1/channels/{channel_uuid}/customers':
    get:
      tags:
        - admins
        - managers
      summary: list customers
      operationId: channel.customer.list
      description: |
        List customers of an available channel.
      security:
        - BasicCustomerAuth: []
          ApplicationAuth: []
        - CustomerAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a customer
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCustomerWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCustomerListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: add channel customer
      operationId: add.channel.customer
      description: |
        Add existing customer to an available channel.
      security:
        - BasicCustomerAuth: []
          ApplicationAuth: []
        - CustomerAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Customer to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCustomerCreate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCustomerCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/customers/{customer_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
      summary: get channel customer
      operationId: channel.customer.get
      description: |
        Get available customer of an available channel.
      security:
        - BasicCustomerAuth: []
          ApplicationAuth: []
        - CustomerAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: customer_uuid
          required: true
          description: customer uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCustomerGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CUSTOMER


  # Channel BillingModel Endpoints
  '/api/v1/channels/{channel_uuid}/billing_models':
    get:
      tags:
        - admins
        - managers
      summary: list billing_models
      operationId: channel.billing_model.list
      description: |
        List billing_models of an available channel.
      security:
        - BasicBillingModelAuth: []
          ApplicationAuth: []
        - BillingModelAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a billing_model
          required: false
          schema:
            $ref: '#/components/schemas/ChannelBillingModelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelBillingModelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: add channel billing_model
      operationId: add.channel.billing_model
      description: |
        Add existing Billing Model to an available Channel.
      security:
        - BasicBillingModelAuth: []
          ApplicationAuth: []
        - BillingModelAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Billing Model to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelBillingModelRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/billing_models/{model_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel billing_model
      operationId: channel.billing_model.get
      description: |
        Get available billing_model of an available channel.
      security:
        - BasicBillingModelAuth: []
          ApplicationAuth: []
        - BillingModelAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: model_uuid
          required: true
          description: billing_model uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_BILLING_MODEL

  '/api/v1/channels/{channel_uuid}/billing_models/{model_uuid}/parent':
    get:
      tags:
        - admins
        - managers
      summary: get channel billing model parent
      operationId: channel.billing_model.parent.get
      description: |
        Get a RiSE Channel's Billing Model's parent Model by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: model_uuid
          required: true
          description: billing_model uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/billing_models/{model_uuid}/ancestors':
    get:
      tags:
        - admins
        - managers
      summary: get channel ancestors
      operationId: channel.billing_model.ancestors.list
      description: |
        Get a RiSE Channel's Billing Model\'s ancestor Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: model_uuid
          required: true
          description: billing_model uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/billing_model/{model_uuid}/children':
    get:
      tags:
        - admins
        - managers
      summary: get channel billing model children
      operationId: channel.billing_model.children.list
      description: |
        Get a RiSE Channel's Billing Model\'s children Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: model_uuid
          required: true
          description: billing_model uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a billing model
          required: false
          schema:
            $ref: '#/components/schemas/ChannelBillingModelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelBillingModelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/billing_model/{model_uuid}/descendents':
    get:
      tags:
        - admins
        - managers
      summary: get channel billing model descendents
      operationId: channel.billing_model.descendents.list
      description: |
        Get a RiSE Channel's Billing Model's descendents Channel Billing Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: model_uuid
          required: true
          description: billing_model uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a billing model
          required: false
          schema:
            $ref: '#/components/schemas/ChannelBillingModelWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelBillingModelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelBillingModelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_BILLING_MODEL


  # Channel Collection Endpoints
  '/api/v1/channels/{channel_uuid}/collections':
    get:
      tags:
        - admins
        - managers
      summary: list collections
      operationId: channel.collection.list
      description: |
        List collections of an available channel.
      security:
        - BasicApplicationAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a collection
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCollectionWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: add channel collection
      operationId: add.channel.collection
      description: |
        Add existing collection to an available channel.
      security:
        - BasicApplicationAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Collection to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCollectionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/collections/{collection_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel collection
      operationId: channel.collection.get
      description: |
        Get available collection of an available channel.
      security:
        - BasicApplicationAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_COLLECTION

  '/api/v1/channels/{channel_uuid}/collections/{collection_uuid}/parent':
    get:
      tags:
        - admins
        - managers
      summary: get channel collection parent
      operationId: channel.collection.parent.get
      description: |
        Get a RiSE Channel's Collection's parent Collection by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/collections/{collection_uuid}/ancestors':
    get:
      tags:
        - admins
        - managers
      summary: get channel ancestors
      operationId: channel.collection.ancestors.list
      description: |
        Get a RiSE Channel's Collection\'s ancestor Channel Collections by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/collection/{collection_uuid}/children':
    get:
      tags:
        - admins
        - managers
      summary: get channel collection children
      operationId: channel.collection.children.list
      description: |
        Get a RiSE Channel's Collection\'s children Channel Collections by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a collection
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCollectionWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCollectionSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: create channel collection child
      operationId: create.channel.collection.collection
      description: |
        Create a collection on an available channel collection.
      security:
        - BasicApplicationAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Collection to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCollectionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    put:
      tags:
        - admins
        - managers
      summary: add channel collection to collection
      operationId: add.channel.collection.collection
      description: |
        Add existing collection to an available channel collection.
      security:
        - BasicApplicationAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Collection to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCollectionAddRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/collection/{collection_uuid}/descendents':
    get:
      tags:
        - admins
        - managers
      summary: get channel collection descendents
      operationId: channel.collection.descendents.list
      description: |
        Get a RiSE Channel's Collection's descendents Channel Collections by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: collection_uuid
          required: true
          description: collection uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a collection
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCollectionWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCollectionSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCollectionListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COLLECTION


  # Channel Campaign Endpoints
  '/api/v1/channels/{channel_uuid}/campaigns':
    get:
      tags:
        - admins
        - managers
      summary: list campaigns
      operationId: channel.campaign.list
      description: |
        List campaigns of an available channel.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a campaign
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: add channel campaign
      operationId: add.channel.campaign
      description: |
        Add existing campaign to an available channel.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Campaign to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCampaignRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/campaigns/{campaign_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel campaign
      operationId: channel.campaign.get
      description: |
        Get available campaign of an available channel.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CAMPAIGN


  '/api/v1/channels/{channel_uuid}/campaigns/{campaign_uuid}/parent':
    get:
      tags:
        - admins
        - managers
      summary: get channel campaign parent
      operationId: channel.campaign.parent.get
      description: |
        Get a RiSE Channel's Campaign's parent Model by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/campaigns/{campaign_uuid}/ancestors':
    get:
      tags:
        - admins
        - managers
      summary: get channel ancestors
      operationId: channel.campaign.ancestors.list
      description: |
        Get a RiSE Channel's Campaign\'s ancestor Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/campaigns/{campaign_uuid}/children':
    get:
      tags:
        - admins
        - managers
      summary: get channel campaign children
      operationId: channel.campaign.children.list
      description: |
        Get a RiSE Channel's Campaign\'s children Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a campaign
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
    post:
      tags:
        - admins
        - managers
      summary: create channel campaign child
      operationId: create.channel.campaign.campaign
      description: |
        create new campaign on an available channel campaign.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Campaign to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCampaignRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CAMPAIGN
    put:
      tags:
        - admins
        - managers
      summary: add channel campaign child
      operationId: add.channel.campaign.campaign
      description: |
        Add existing campaign to an available channel campaign.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Campaign to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCampaignAddRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CAMPAIGN

  '/api/v1/channels/{channel_uuid}/campaigns/{campaign_uuid}/descendents':
    get:
      tags:
        - admins
        - managers
      summary: get channel campaign descendents
      operationId: channel.campaign.descendents.list
      description: |
        Get a RiSE Channel's Campaign's descendents Channel Campaigns by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a campaign
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CAMPAIGN

  '/api/v1/channels/{channel_uuid}/campaigns/{campaign_uuid}/billing_models':
    get:
      tags:
        - admins
        - managers
      summary: list channel campaign billing models
      operationId: channel.campaign.billing_model.list
      description: |
        Get a RiSE Channel's Campaign's Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignBillingModelListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CAMPAIGN
    post:
      tags:
        - admins
        - managers
      summary: add channel campaign billing model
      operationId: add.channel.campaign.billing_model
      description: |
        Add existing billing model to an available channel campaign.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Billing Model to Add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCampaignBillingModelRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignBillingModelCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CAMPAIGN | E_NOT_FOUND_BILLING_MODEL


  # Public Channel Campaign Endpoints
  '/api/v1/channels/{channel_uuid}/public/campaigns':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: list campaigns
      operationId: channel.public.campaign.list
      description: |
        List public campaigns of an available channel.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a campaign
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/public/campaigns/{campaign_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel campaign
      operationId: channel.public.campaign.get
      description: |
        Get available campaign of an available channel.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CAMPAIGN


  '/api/v1/channels/{channel_uuid}/public/campaigns/{campaign_uuid}/parent':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel campaign parent
      operationId: channel.public.campaign.parent.get
      description: |
        Get a RiSE Channel's Campaign's parent Model by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/public/campaigns/{campaign_uuid}/ancestors':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel ancestors
      operationId: channel.public.campaign.ancestors.list
      description: |
        Get a RiSE Channel's Campaign\'s ancestor Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/public/campaigns/{campaign_uuid}/children':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel campaign children
      operationId: channel.public.campaign.children.list
      description: |
        Get a RiSE Channel's Campaign\'s children Channel Models by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a campaign
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL

  '/api/v1/channels/{channel_uuid}/public/campaigns/{campaign_uuid}/descendents':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel campaign descendents
      operationId: channel.public.campaign.descendents.list
      description: |
        Get a RiSE Channel's Campaign's descendents Channel Campaigns by it's uuid.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a campaign
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCampaignSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCampaignListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CAMPAIGN

  '/api/v1/channels/{channel_uuid}/public/campaigns/{campaign_uuid}/offers':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel campaign
      operationId: channel.public.campaign.offer.list
      description: |
        Get available campaign offers of an available channel.
      security:
        - BasicCampaignAuth: []
          ApplicationAuth: []
        - CampaignAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: campaign_uuid
          required: true
          description: campaign uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CAMPAIGN

  # Channel Offer Endpoints
  '/api/v1/channels/{channel_uuid}/offers':
    get:
      tags:
        - admins
        - managers
      summary: list offers
      operationId: channel.offer.list
      description: |
        List offers of an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up an offer
          required: false
          schema:
            $ref: '#/components/schemas/ChannelOfferWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/offers/{offer_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel offer
      operationId: channel.offer.get
      description: |
        Get available offer of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: offer_uuid
          required: true
          description: offer uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_OFFER
  '/api/v1/channels/{channel_uuid}/offers/{offer_uuid}/variants':
    get:
      tags:
        - admins
        - managers
      summary: get channel offer variations
      operationId: channel.offer.variant.list
      description: |
        Get available offer variants of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: offer_uuid
          required: true
          description: offer uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up an offer variant
          required: false
          schema:
            $ref: '#/components/schemas/ChannelOfferWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferVariantListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_OFFER
  '/api/v1/channels/{channel_uuid}/offers/{offer_uuid}/variants/{variant_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel variant offer
      operationId: channel.offer.variant.get
      description: |
        Get available offer variant of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: offer_uuid
          required: true
          description: offer uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: variant_uuid
          required: true
          description: offer variant uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferVariantGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_OFFER




  # Channel Offer Endpoints
  '/api/v1/channels/{channel_uuid}/public/offers':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: list offers
      operationId: channel.public.offer.list
      description: |
        List public offers of an available channel.
      security:
        - BasicUserAuth: []
          ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up an offer
          required: false
          schema:
            $ref: '#/components/schemas/ChannelOfferWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/public/offers/{offer_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get channel offer
      operationId: channel.public.offer.get
      description: |
        Get available offer of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: offer_uuid
          required: true
          description: offer uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_OFFER
  '/api/v1/channels/{channel_uuid}/public/offers/{offer_uuid}/variants':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get channel offer variations
      operationId: channel.public.offer.variant.list
      description: |
        Get available offer variants of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: offer_uuid
          required: true
          description: offer uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up an offer variant
          required: false
          schema:
            $ref: '#/components/schemas/ChannelOfferWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferVariantListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_OFFER
  '/api/v1/channels/{channel_uuid}/public/offers/{offer_uuid}/variants/{variant_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get channel variant offer
      operationId: channel.public.offer.variant.get
      description: |
        Get available offer variant of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: offer_uuid
          required: true
          description: offer uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: variant_uuid
          required: true
          description: offer variant uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelOfferVariantGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_OFFER


  # Channel Cart Endpoints
  '/api/v1/channels/{channel_uuid}/carts/{cart_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get channel cart
      operationId: channel.cart.get
      description: |
        Get available cart of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: cart_uuid
          required: true
          description: cart uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CART

  '/api/v1/channels/{channel_uuid}/carts/{cart_uuid}/items':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: list channel cart items
      operationId: channel.cart.item.list
      description: |
        List available cart items of an available channel cart.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: cart_uuid
          required: true
          description: cart uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartItemListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CART
    post:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: add channel cart item
      operationId: add.channel.cart.item
      description: |
        Add an available offer variant to an available channel cart.
      security:
        - BasicCartAuth: []
          ApplicationAuth: []
        - CartAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: cart_uuid
          required: true
          description: cart uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Cart Item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCartItemAddRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartItemCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CART


  '/api/v1/channels/{channel_uuid}/carts/{cart_uuid}/items/{item_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get channel cart item
      operationId: channel.cart.item.get
      description: |
        List available cart items of an available channel cart.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: cart_uuid
          required: true
          description: cart uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: item_uuid
          required: true
          description: item uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartItemGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CART | E_NOT_FOUND_CHANNEL_CART_ITEM
    put:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: update channel cart item
      operationId: update.channel.cart.item
      description: |
        Update a cart item on an available channel cart.
      security:
        - BasicCartAuth: []
          ApplicationAuth: []
        - CartAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: cart_uuid
          required: true
          description: cart uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: item_uuid
          required: true
          description: item uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Cart Item to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCartItemAddRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartItemCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CART | E_NOT_FOUND_CHANNEL_CART_ITEM

  '/api/v1/channels/{channel_uuid}/carts/{cart_uuid}/checkout':
    put:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: checkout channel cart
      operationId: channel.cart.checkout
      description: |
        Create a Channel Order from a Channel Cart
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: cart_uuid
          required: true
          description: cart uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Checkout Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCartCheckoutRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCartCheckoutCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_CART





  # Channel Feed Endpoints
  '/api/v1/channels/{channel_uuid}/feeds':
    get:
      tags:
        - admins
        - managers
      summary: list channel feeds
      operationId: channel.feed.list
      description: |
        Get available feeds of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel feed
          required: false
          schema:
            $ref: '#/components/schemas/ChannelFeedWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeedListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/feeds/{feed_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel feed
      operationId: channel.feed.get
      description: |
        Get available feed of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_uuid
          required: true
          description: feed uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeedGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_FEED

  '/api/v1/channels/{channel_uuid}/feeds/{feed_uuid}/items':
    get:
      tags:
        - admins
        - managers
      summary: list channel feed items
      operationId: channel.feed.item.list
      description: |
        List available feed items of an available channel feed.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_uuid
          required: true
          description: feed uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel feed
          required: false
          schema:
            $ref: '#/components/schemas/ChannelFeedItemWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeedItemListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_FEED
    post:
      tags:
        - admins
        - managers
      summary: create channel feed item
      operationId: create.channel.feed.item
      description: |
        Create a Feed Item on Channel Feed
      security:
        - BasicCartAuth: []
          ApplicationAuth: []
        - CartAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_uuid
          required: true
          description: feed uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Feed Item to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelFeedItemCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeedItemCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_FEED

  '/api/v1/channels/{channel_uuid}/feeds/{feed_uuid}/items/{item_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel feed item
      operationId: channel.feed.item.get
      description: |
        Get an available feed item of an available channel feed.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_uuid
          required: true
          description: feed uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: item_uuid
          required: true
          description: item uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeedItemGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_FEED | E_NOT_FOUND_CHANNEL_FEED_ITEM
    put:
      tags:
        - admins
        - managers
      summary: update channel feed item
      operationId: update.channel.feed.item
      description: |
        Update a Feed Item on Channel Feed
      security:
        - BasicCartAuth: []
          ApplicationAuth: []
        - CartAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: feed_uuid
          required: true
          description: feed uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: item_uuid
          required: true
          description: item uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Feed Item to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelFeedItemUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelFeedItemCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_FEED | E_NOT_FOUND_CHANNEL_FEED_ITEM





  # Channel Country Endpoints
  '/api/v1/channels/{channel_uuid}/countries':
    get:
      tags:
        - admins
        - managers
      summary: list channel countries
      operationId: channel.country.list
      description: |
        Get available countries of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel country
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCountryWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/countries/{country_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel country
      operationId: channel.country.get
      description: |
        Get available country of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY

  '/api/v1/channels/{channel_uuid}/countries/{country_uuid}/provinces':
    get:
      tags:
        - admins
        - managers
      summary: list channel country provinces
      operationId: channel.country.province.list
      description: |
        List available country provinces of an available channel country.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel country
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCountryProvinceWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryProvinceListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY
    post:
      tags:
        - admins
        - managers
      summary: create channel country province
      operationId: create.channel.country.province
      description: |
        Create a Country Province on Channel Country
      security:
        - BasicCartAuth: []
          ApplicationAuth: []
        - CartAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Country Province to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCountryProvinceCreateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryProvinceCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY

  '/api/v1/channels/{channel_uuid}/countries/{country_uuid}/provinces/{province_uuid}':
    get:
      tags:
        - admins
        - managers
      summary: get channel country province
      operationId: channel.country.province.get
      description: |
        Get an available country province of an available channel country.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: province_uuid
          required: true
          description: province uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryProvinceGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY | E_NOT_FOUND_CHANNEL_COUNTRY_PROVINCE
    put:
      tags:
        - admins
        - managers
      summary: update channel country province
      operationId: update.channel.country.province
      description: |
        Update a Country Province on Channel Country
      security:
        - BasicCartAuth: []
          ApplicationAuth: []
        - CartAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: province_uuid
          required: true
          description: province uuid
          schema:
            type: string
            format: uuid
      requestBody:
        description: Country Province to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCountryProvinceUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryProvinceCommandResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY | E_NOT_FOUND_CHANNEL_COUNTRY_PROVINCE



  '/api/v1/channels/{channel_uuid}/public/countries':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: list channel public countries
      operationId: channel.public.country.list
      description: |
        Get available public countries of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel country
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCountryWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL
  '/api/v1/channels/{channel_uuid}/public/countries/{country_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel country
      operationId: channel.public.country.get
      description: |
        Get public available country of an available channel.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY

  '/api/v1/channels/{channel_uuid}/public/countries/{country_uuid}/provinces':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: list public channel country provinces
      operationId: channel.public.country.province.list
      description: |
        List available public country provinces of an available channel country.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
        - in: query
          name: where
          description: pass an optional where query for looking up a channel country
          required: false
          schema:
            $ref: '#/components/schemas/ChannelCountryProvinceWhereQuery'
        - in: query
          name: offset
          description: number of records to skip for pagination
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: sort
          description: pass an optional sort query for sorting responses
          required: false
          schema:
            $ref: '#/components/schemas/ChannelSortQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryProvinceListResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY


  '/api/v1/channels/{channel_uuid}/public/countries/{country_uuid}/provinces/{province_uuid}':
    get:
      tags:
        - admins
        - managers
        - registered
        - public
      summary: get public channel country province
      operationId: channel.public.country.province.get
      description: |
        Get an available public country province of an available channel country.
      security:
        - ApplicationAuth: []
        - UserAuth: []
          ApplicationAuth: []
      parameters:
        - in: path
          name: channel_uuid
          required: true
          description: channel uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: country_uuid
          required: true
          description: country uuid
          schema:
            type: string
            format: uuid
        - in: path
          name: province_uuid
          required: true
          description: province uuid
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCountryProvinceGetResponse'
        '400':
          description: E_VALIDATION_BAD_REQUEST
        '403':
          description: E_FORBIDDEN | E_INVALID_APPLICATION
        '404':
          description: E_NOT_FOUND_CHANNEL | E_NOT_FOUND_CHANNEL_COUNTRY | E_NOT_FOUND_CHANNEL_COUNTRY_PROVINCE





# COMPONENTS
components:
  securitySchemes:
    BasicUserAuth:
      type: http
      scheme: basic
      description: Basic Authoriazation

    UserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Token Authentication

    ApplicationAuth:
      type: apiKey
      in: header
      name: X-APPLICATION-KEY
      description: Application Public Key


  schemas:
    # Channel
    Channel:
      description: |
        A RiSE Channel is the primary entry point for everything on RiSE. It is the container object that you attach other Channels, Apps, Products, Offers, Campaigns and more.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        description:
          type: string
          example: My Channel Description
        published:
          type: boolean
          example: true
        published_at:
          type: string
          example: '2019-04-01 12:07:51.428-07'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.created
        object:
          type: string
          example: Channel
        data:
          $ref: '#/components/schemas/Channel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelUpdateCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.updated
        object:
          type: string
          example: Channel
        data:
          $ref: '#/components/schemas/Channel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.get'
        object:
          type: string
          example: Channel
        data:
          $ref: '#/components/schemas/Channel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.list'
        list:
          type: string
          example: Channel
        data:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        url:
          type: string
          example: api/v1/channels

    ChannelRequest:
      description: |
        Channel request body JSON object
      type: object
      properties:
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        published:
          type: boolean
          example: true

    ChannelWhereQuery:
      description: |
        A query parameter object to filter results
      type: object
      # required:
      # - handle
      # - title
      properties:
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        published:
          type: boolean
          example: true

    ChannelSortQuery:
      description: |
        An array of arrays to sort results
      example: [['created_at', 'desc']]
      type: array
      items:
        type: array
        items:
          type: string

    # ChannelUser
    ChannelUser:
      description: |
        A Channel User is a single person or application that has login detials. Caution, do not confuse Channel User with a Channel Customer or Channel Gateway Account.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        user_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        username:
          type: string
          example: shraptor
        email:
          type: string
          example: hello@rise.store
        name_prefix:
          type: string
          example: Mr.
        name_first:
          type: string
          example: Scott
        name_last:
          type: string
          example: Wyatt
        name_suffix:
          type: string
          example: B.D.
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelUserGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.user.get'
        object:
          type: string
          example: ChannelUser
        data:
          $ref: '#/components/schemas/ChannelUser'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            pii:
              $ref: '#/components/schemas/ChannelUserAnnotations'

    ChannelUserListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.user.list'
        list:
          type: string
          example: ChannelUser
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelUser'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users
        annotations:
          type: object
          properties:
            pii:
              $ref: '#/components/schemas/ChannelUserAnnotations'

    ChannelUserCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.user.created
        object:
          type: string
          example: ChannelUser
        data:
          $ref: '#/components/schemas/ChannelUser'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            pii:
              $ref: '#/components/schemas/ChannelUserAnnotations'

    ChannelUserRecoverCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.user.recovered
        object:
          type: string
          example: ChannelUserRecover
        data:
          type: object
          properties:
            redirect:
              type: string
              example: 'https://rise.store/login/forgot_password/recover'

    ChannelUserSessionRequestResponse:
      type: object
      properties:
        token:
          type: string
          example: <JWT Token>
        action:
          type: string
          example: channel.session.get
        includes:
          type: array
          items:
            type: string
          example: ['ChannelUser', 'ChannelUserRole.list', 'ChannelCart', 'ChannelCustomer']
        data:
          type: object
          properties:
            ChannelUser:
              $ref: '#/components/schemas/ChannelUser'
            ChannelUserRole.list:
              type: array
              items:
                $ref: '#/components/schemas/ChannelUserRole'
            ChannelCart:
              $ref: '#/components/schemas/ChannelCart'
            ChannelCustomer:
              $ref: '#/components/schemas/ChannelCustomer'
        urls:
          type: object
          properties:
            ChannelUser:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851
            ChannelRole.list:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851/roles
            ChannelCart:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/c290f1ee-6c54-4b01-90e6-d701748f0851
            ChannelCustomer:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/customers/c290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            ChannelUser:
              type: object
              properties:
                pii:
                  $ref: '#/components/schemas/ChannelUserAnnotations'


    ChannelUserRegisteredCommandResponse:
      description: |
        Response Object after a user is registered to a channel.
      type: object
      properties:
        event_type:
          type: string
          example: channel.user.registered
        token:
          type: string
          example: <JWT Token>
        includes:
          type: array
          items:
            type: string
          example: ['ChannelUser', 'ChannelRole.list', 'ChannelCart', 'ChannelCustomer']
        data:
          type: object
          properties:
            ChannelUser:
              $ref: '#/components/schemas/ChannelUser'
            ChannelUserRole.list:
              type: array
              items:
                $ref: '#/components/schemas/ChannelUserRole'
            ChannelCart:
              $ref: '#/components/schemas/ChannelCart'
            ChannelCustomer:
              $ref: '#/components/schemas/ChannelCustomer'
        urls:
          type: object
          properties:
            ChannelUser:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851
            ChannelRole.list:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851/roles
            ChannelCart:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/c290f1ee-6c54-4b01-90e6-d701748f0851
            ChannelCustomer:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/customers/c290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            ChannelUser:
              type: object
              properties:
                pii:
                  $ref: '#/components/schemas/ChannelUserAnnotations'
            ChannelCustomer:
              type: object
              properties:
                pii:
                  $ref: '#/components/schemas/ChannelCustomerAnnotations'


    ChannelUserSessionUserRequestResponse:
      type: object
      properties:
        token:
          type: string
          example: <JWT Token>
        action:
          type: string
          example: 'channel.session.user.get'
        object:
          type: string
          example: 'ChannelUser'
        data:
          $ref: '#/components/schemas/ChannelUser'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            pii:
              $ref: '#/components/schemas/ChannelUserAnnotations'

    ChannelUserSessionCartRequestResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.session.cart.get'
        object:
          type: string
          example: 'ChannelCart'
        data:
          $ref: '#/components/schemas/ChannelCart'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelUserSessionCustomerRequestResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.session.customer.get'
        object:
          type: string
          example: 'ChannelCustomer'
        data:
          $ref: '#/components/schemas/ChannelCustomer'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/customers/c290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            pii:
              $ref: '#/components/schemas/ChannelCustomerAnnotations'

    ChannelUserSessionRolesRequestResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.session.user.role.list'
        list:
          type: string
          example: 'ChannelRole'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelUserRole'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851/roles

    # ChannelUserRole
    ChannelUserRole:
      description: |
        The administrative role the user posseses.
      type: object
      properties:
        name:
          type: string
          example: admin
        public_name:
          type: string
          example: Channel Admin

    ChannelUserRoleCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.user.role.added
        object:
          type: string
          example: ChannelUserRole
        data:
          $ref: '#/components/schemas/ChannelUserRole'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851/roles/manager

    ChannelUserRoleListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.user.role.list'
        list:
          type: string
          example: ChannelUserRole
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelUserRole'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851/roles

    ChannelUserRoleGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.user.role.get'
        object:
          type: string
          example: ChannelUserRole
        data:
          $ref: '#/components/schemas/ChannelUserRole'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/users/u290f1ee-6c54-4b01-90e6-d701748f0851/roles/admin

    ChannelUserAnnotations:
      description: |
        User Annotations are indicators of information about the user object.  Persional Idnetifying Information (PII) is a common annotation that indicates that the user object may contain sensitive information.
      type: array
      example: ['email', 'name_prefix', 'name_first', 'name_last', 'name_suffix', 'phone', 'phone_sms']


    ChannelUserWhereQuery:
      type: object
      # required:
      # - handle
      # - title
      properties:
        username:
          type: string
          example: myusername
        email:
          type: string
          example: hello@rise.store
        accepts_marketing:
          type: boolean
          example: true

    ChannelUserRegister:
      description: |
        Request Object to Register a New User to a Channel. Optionally pass a customer_uuid, or cart_uuid to also associate the user to a customer or cart, otherwise a new Channel Customer or Cart will be created.
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: hello@rise.store
        password:
          type: string
          example: password1234!
        name_prefix:
          type: string
          example: Mr.
        name_first:
          type: string
          example: Scott
        name_last:
          type: string
          example: Wyatt
        name_suffix:
          type: string
          example: B.D.
        phone:
          type: string
          example: 55555555555
        phone_sms:
          type: string
          example: 55555555555
        customer_uuid:
          type: string
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        cart_uuid:
          type: string
          example: c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelUserLogin:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: hello@rise.store
        password:
          type: string
          example: password1234!

    ChannelUserRecover:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: hello@rise.store

    ChannelUserChannelListResponse:
      description: |
        List of Channel User\'s Channels JSON objects
      type: object
      properties:
        action:
          type: string
          example: 'channel.user.channel.list'
        list:
          type: string
          example: Channel
        data:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
        url:
          type: string
          example: api/v1/users/u290f1ee-6c54-4b01-90e6-d701748f0851/channels

    # ChannelOffer
    ChannelOfferGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.offer.get'
        object:
          type: string
          example: ChannelOffer
        data:
          $ref: '#/components/schemas/ChannelOffer'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/offers/o290f1ee-6c54-4b01-90e6-d701748f0851
    ChannelOfferListResponse:
      description: |
        List of Channel Offer JSON objects
      type: object
      properties:
        action:
          type: string
          example: 'channel.offer.list'
        list:
          type: string
          example: ChannelOffer
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelOffer'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/offers/o290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelOfferVariantListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.offer.variant.list'
        list:
          type: string
          example: ChannelOfferVariant
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelOfferVariant'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/offers/o290f1ee-6c54-4b01-90e6-d701748f0851/variants
    ChannelOfferVariantGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.offer.variant.get'
        object:
          type: string
          example: ChannelOfferVariant
        data:
          $ref: '#/components/schemas/ChannelOfferVariant'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/offers/o290f1ee-6c54-4b01-90e6-d701748f0851/variant/v290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelOffer:
      description: |
        A Channel Offer is an item that is eligible for purchase.  Often an Offer will include optional Billing Models that can be applied to the offer when added to a Channel Cart.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        offer_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        collection_uuid:
          description: The campaign uuid this offer is part of.
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        handle:
          type: string
          example: my-awesome-product
        title:
          type: string
          example: My Awesome Product
        price:
          type: number
          example: 1000
        price_calculated:
          type: number
          example: 999
        price_compare_at:
          type: number
          example: 1500
        primary_image:
          type: object
          example: { src: 'https://cdn.rise.store/images/1/image.png' }
          properties:
            src:
              type: string
        property_pricing:
          $ref: '#/components/schemas/ChannelOfferPropertyPricing'
        currency:
          type: string
          example: USD
        options:
          description: |
            Options are the variant properties available.
          type: array
          example: ['size', 'color']
          items:
            type: string
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ChannelOfferVariant'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelOfferPropertyPricing:
      description: |
        Offers may have pricing that is not covered by simple variations.  For example, a Pizza with all it's toppings would create millions of possible variants. Instead, create properties that add to the price of an offer that aren't well suited by variants.
      type: object
      example: { pepperoni: { name: 'Pepperoni', price: 1000, image: 'https://cdn.rise.store/images/1/1.png', mulit: false } }

    ChannelOfferVariant:
      description: |
        A Variation of a Channel Offer. If the Channel Offer is a Pizza, a Variant is Small, Medium, or Large Pizza.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        offer_uuid:
          description: |
            Unique id for the Offer
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        variant_uuid:
          description: |
            Unique id for the Offer Variant
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        sku:
          description: |
            The Stock Keeping Unit for the Product Variant this Offer is a part of.
          type: string
          example: sku-123
        title:
          type: string
          example: My Awesome Product
        price:
          type: number
          example: 1000
        price_calculated:
          type: number
          example: 999
        price_compare_at:
          type: number
          example: 1500
        property_pricing:
          $ref: '#/components/schemas/ChannelOfferPropertyPricing'
        currency:
          type: string
          example: USD
        option:
          description: |
            The Variant Unique Property, for Example a Large Pizza.
          type: object
          example: {'size': 'Large'}
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelOfferWhereQuery:
      type: object
      properties:
        title:
          type: string
          example: Awesome Product
        price:
          type: number
          example: 1000

    # ChannelCustomer
    ChannelCustomer:
      description: |
        A Channel Customer is a single customer account. A Customer can have many users and many gateway accounts. A Customer is a collection of shipping details, billing details, orders, and subscriptions. A Cusotmer can be added to campaigns for special customer pricing and much more. Caution, do not confuse Channel Customer with a Channel User or Channel Gateway Account.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        customer_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        display_name:
          type: string
          example: shraptor
        email:
          type: string
          example: hello@rise.store
        company:
          type: string
          example: My Company
        name_first:
          type: string
          example: Scott
        name_last:
          type: string
          example: Wyatt
        phone:
          type: string
          example: 55555555555
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCustomerGetResponse:
      description: |
        A Channel Customer Get Response JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.customer.get'
        object:
          type: string
          example: ChannelCustomer
        data:
          $ref: '#/components/schemas/ChannelCustomer'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/customers/u290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCustomerListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.customer.list'
        list:
          type: string
          example: ChannelCustomer
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCustomer'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/customers
        annotations:
          $ref: '#/components/schemas/ChannelCustomerAnnotations'

    ChannelCustomerCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.customer.created
        object:
          type: string
          example: ChannelCustomer
        data:
          $ref: '#/components/schemas/ChannelCustomer'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/customers/u290f1ee-6c54-4b01-90e6-d701748f0851
        annotations:
          type: object
          properties:
            pii:
              $ref: '#/components/schemas/ChannelCustomerAnnotations'


    ChannelCustomerAnnotations:
      description: |
        Customer Annotations are indicators of information about the customer object.  Persional Idnetifying Information (PII) is a common annotation that indicates that a the customer object may contain sensitive information.
      type: array
      example: ['email', 'name_prefix', 'name_first', 'name_last', 'name_suffix', 'phone', 'phone_sms']

    ChannelCustomerWhereQuery:
      type: object
      properties:
        email:
          type: string
          example: hello@rise.store
        accepts_marketing:
          type: boolean
          example: true

    ChannelCustomerCreate:
      type: object
      required:
        - email
      properties:
        display_name:
          type: string
          example: shraptor
        email:
          type: string
          example: hello@rise.store
        company:
          type: string
          example: My Company
        name_first:
          type: string
          example: Scott
        name_last:
          type: string
          example: Wyatt
        phone:
          type: string
          example: 55555555555



    # ChannelCart
    ChannelCartGetResponse:
      description: |
        Channel Cart JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.cart.get'
        object:
          type: string
          example: ChannelCart
        data:
          $ref: '#/components/schemas/ChannelCart'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/carts/o290f1ee-6c54-4b01-90e6-d701748f0851
    ChannelCartListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.cart.list'
        list:
          type: string
          example: ChannelCart
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCart'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/o290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCartItemCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.cart.item.added
        object:
          type: string
          example: ChannelCartItem
        data:
          $ref: '#/components/schemas/ChannelCartItem'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/c290f1ee-6c54-4b01-90e6-d701748f0851/items/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCartItemListResponse:
      description: |
        List of Customer Cart Items
      type: object
      properties:
        action:
          type: string
          example: 'channel.cart.item.list'
        list:
          type: string
          example: ChannelCartItem
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCartItem'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/o290f1ee-6c54-4b01-90e6-d701748f0851/items

    ChannelCartItemAddRequest:
      description: |
        Channel Cart Item request body JSON object
      type: object
      properties:
        offer_uuid:
          type: string
          format: uuid
          example: o290f1ee-6c54-4b01-90e6-d701748f0851
        variant_uuid:
          type: string
          format: uuid
          example: v290f1ee-6c54-4b01-90e6-d701748f0851
        quantity:
          type: number
          example: 1


    ChannelCartItemGetResponse:
      description: |
        Channel Cart Item JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.cart.item.get'
        object:
          type: string
          example: ChannelCartItem
        data:
          $ref: '#/components/schemas/ChannelCartItem'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/carts/o290f1ee-6c54-4b01-90e6-d701748f0851/item/v290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCartCheckoutRequest:
      description: |
        Channel Cart Checkout request body JSON object
      type: object
    #      properties:

    ChannelCartCheckoutCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.cart.checked_out
        includes:
          type: array
          items:
            type: string
          example: ['ChannelCart', 'ChannelOrder']
        data:
          type: object
          properties:
            ChannelCart:
              $ref: '#/components/schemas/ChannelCart'
            ChannelOrder:
              $ref: '#/components/schemas/ChannelOrder'
        urls:
          type: object
          properties:
            ChannelCart:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/carts/c290f1ee-6c54-4b01-90e6-d701748f0851
            ChannelOrder:
              type: string
              example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/orders/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCart:
      description: |
        A Channel Cart is a colleciton of items that can be sent to a checkout, including Billing information, Shipping information, a Channel Customer and a Channel User.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        cart_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        customer_uuid:
          type: string
          format: uuid
          example: cc90f1ee-6c54-4b01-90e6-d701748f0851
        handle:
          type: string
          example: my-awesome-product
        note:
          type: string
          example: Deliver to Back porch
        # note_attributes:
        #   type: object
        #   example:
        status:
          type: string
          example: open
        currency:
          type: string
          example: USD
        lines_discounted:
          type: array
          items:
            type: object
          example: []
        lines_coupons:
          type: array
          items:
            type: object
          example: []
        lines_shipping:
          type: array
          items:
            type: object
          example: []
        lines_taxes:
          type: array
          items:
            type: object
          example: []
        lines_pricing_overrides:
          type: array
          items:
            type: object
          example: []
        is_shipping_included:
          type: boolean
        shipping_rates:
          type: array
          items:
            type: object
          example: []
        has_subscription:
          type: boolean
        has_shipping:
          type: boolean
        has_taxes:
          type: boolean
        has_shipping_taxes:
          type: boolean
        is_tax_included:
          type: boolean
        total_discounts:
          type: integer
          example: 100
        total_coupons:
          type: integer
          example: 100
        total_pricing_overrides:
          type: integer
          example: 100
        total_line_items_price:
          type: integer
          example: 100
        total_price:
          type: integer
          example: 100
        total_due:
          type: integer
          example: 100
        total_shipping:
          type: integer
          example: 100
        total_tax:
          type: integer
          example: 100
        total_weight:
          type: integer
          example: 100
        reservation_time:
          type: integer
          example: 100
        checked_out:
          type: boolean
          example: false
        checked_out_at:
          type: string
        closed:
          type: boolean
          example: false
        closed_at:
          type: string
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCartItem'

    ChannelCartItem:
      description: |
        A Single Cart Item JSON object
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        cart_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        item_uuid:
          description: |
            The unique id of this cart item
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        offer_uuid:
          type: string
          format: uuid
          example: o290f1ee-6c54-4b01-90e6-d701748f0851
        sku:
          description: |
            The stock keeping unit for an offer variant
          type: string
          example: sku-123
        title:
          type: string
          example: My Awesome Product
        price:
          type: number
          example: 1000
        price_calculated:
          type: number
          example: 999
        price_compare_at:
          type: number
          example: 1500
        currency:
          type: string
          example: USD
        option:
          type: object
          example: {'size': 'Large'}
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCartWhereQuery:
      description: |
        A Query that can be passed as a "where" url query object for filtering responses.
      type: object
      properties:
        title:
          type: string
          example: Awesome Product
        price:
          type: number
          example: 1000

    # ChannelCollection
    ChannelCollection:
      description: |
        A RiSE Channel Collection.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        collection_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        purpose:
          type: string
          example: campaign
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        description:
          type: string
          example: My Channel Description
        published:
          type: boolean
          example: true
        published_at:
          type: string
          example: '2019-04-01 12:07:51.428-07'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCollectionCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.collection.created
        object:
          type: string
          example: ChannelCollection
        data:
          $ref: '#/components/schemas/ChannelCollection'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/collections/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCollectionUpdateCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.collection.updated
        object:
          type: string
          example: Channel
        data:
          $ref: '#/components/schemas/ChannelCollection'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/collections/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCollectionGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.collection.get'
        object:
          type: string
          example: ChannelCollection
        data:
          $ref: '#/components/schemas/ChannelCollection'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/collections/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCollectionListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.collection.list'
        list:
          type: string
          example: ChannelCollection
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCollection'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/collections

    ChannelCollectionRequest:
      description: |
        Channel Collection request body JSON object
      type: object
      properties:
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        published:
          type: boolean
          example: true

    ChannelCollectionAddRequest:
      description: |
        Channel Collection request body JSON object
      type: object
      properties:
        collection_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCollectionWhereQuery:
      description: |
        A query parameter object to filter results
      type: object
      # required:
      # - handle
      # - title
      properties:
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        published:
          type: boolean
          example: true

    ChannelCollectionSortQuery:
      description: |
        An array of arrays to sort results
      example: [['created_at', 'desc']]
      type: array
      items:
        type: array
        items:
          type: string

    # ChannelCampaign
    ChannelCampaign:
      description: |
        A RiSE Channel Campaign.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        collection_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        purpose:
          type: string
          example: campaign
        handle:
          type: string
          example: my-campaign-handle
        title:
          type: string
          example: My Campaign Title
        description:
          type: string
          example: My Campaign Description
        published:
          type: boolean
          example: true
        published_at:
          type: string
          example: '2019-04-01 12:07:51.428-07'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCampaignCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.campaign.created
        object:
          type: string
          example: ChannelCampaign
        data:
          $ref: '#/components/schemas/ChannelCampaign'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/campaigns/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCampaignUpdateCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.campaign.updated
        object:
          type: string
          example: Channel
        data:
          $ref: '#/components/schemas/ChannelCampaign'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/campaigns/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCampaignGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.campaign.get'
        object:
          type: string
          example: ChannelCampaign
        data:
          $ref: '#/components/schemas/ChannelCampaign'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/campaigns/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCampaignListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.campaign.list'
        list:
          type: string
          example: ChannelCampaign
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCampaign'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/campaigns

    ChannelCampaignRequest:
      description: |
        Channel Campaign request body JSON object
      type: object
      properties:
        handle:
          type: string
          example: my-campaign-handle
        title:
          type: string
          example: My Campaign Title
        published:
          type: boolean
          example: true

    ChannelCampaignAddRequest:
      description: |
        Channel Campaign request body JSON object
      type: object
      properties:
        collection_uuid:
          type: string
          example: my-campaign-handle

    ChannelCampaignWhereQuery:
      description: |
        A query parameter object to filter results
      type: object
      # required:
      # - handle
      # - title
      properties:
        handle:
          type: string
          example: my-channel-handle
        title:
          type: string
          example: My Channel Title
        published:
          type: boolean
          example: true

    ChannelCampaignSortQuery:
      description: |
        An array of arrays to sort results
      example: [['created_at', 'desc']]
      type: array
      items:
        type: array
        items:
          type: string


    # ChannelBillingModel
    ChannelBillingModel:
      description: |
        A Channel Billing Model is an object that applies price variations to offers. Either as a Straight Sale or Cyclic model that generates a subscription.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        model_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        parent_uuid:
          description: |
            The Parent Billing Model of this Model
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        hierarchy_level:
          description: |
            The Parent Billing Model of this Model
          type: integer
          format: int32
          example: 1
        model_type:
          type: string
          example: straight
        model_group:
          description: |
            A key that indicates that this Model is in a Select List of optional billing models for customers.
          type: string
          example: my-model-group
        model_name:
          type: string
          example: My Model Name
        model_description:
          type: string
          example: My Model Description
        stage_quantity:
          type: object
          example: {}
        stage_pricing:
          type: object
          example: {}
        stage_authorization:
          type: object
          example: {}
        stage_success:
          type: object
          example: {}
        stage_failure:
          type: object
          example: {}
        published:
          type: boolean
          example: true
        published_at:
          type: string
          example: '2019-04-01 12:07:51.428-07'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelBillingModelCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.billing_model.created
        object:
          type: string
          example: ChannelBillingModel
        data:
          $ref: '#/components/schemas/ChannelBillingModel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/billing_models/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelBillingModelUpdateCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.billing_model.updated
        object:
          type: string
          example: Channel
        data:
          $ref: '#/components/schemas/ChannelBillingModel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/billing_models/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelBillingModelGetResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.billing_model.get'
        object:
          type: string
          example: ChannelBillingModel
        data:
          $ref: '#/components/schemas/ChannelBillingModel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/billing_models/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelBillingModelListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.billing_model.list'
        list:
          type: string
          example: ChannelBillingModel
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelBillingModel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/billing_models

    ChannelBillingModelRequest:
      description: |
        Channel BillingModel request body JSON object
      type: object
      properties:
        model_type:
          type: string
          example: straight
        model_group:
          description: |
            A key that indicates that this Model is in a Select List of optional billing models for customers.
          type: string
          example: my-model-group
        model_name:
          type: string
          example: My Model Name
        model_description:
          type: string
          example: My Model Description
        stage_quantity:
          type: object
          example: {}
        stage_pricing:
          type: object
          example: {}
        stage_authorization:
          type: object
          example: {}
        stage_success:
          type: object
          example: {}
        stage_failure:
          type: object
          example: {}
        published:
          type: boolean
          example: true

    ChannelBillingModelWhereQuery:
      description: |
        A query parameter object to filter results
      type: object
      # required:
      # - handle
      # - title
      properties:
        handle:
          type: string
          example: my-billing-handle
        title:
          type: string
          example: My Billing Title
        published:
          type: boolean
          example: true

    ChannelBillingModelSortQuery:
      description: |
        An array of arrays to sort results
      example: [['created_at', 'desc']]
      type: array
      items:
        type: array
        items:
          type: string

    ChannelCampaignBillingModelCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.campaign.billing_model.added
        object:
          type: string
          example: ChannelBillingModel
        data:
          $ref: '#/components/schemas/ChannelBillingModel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/billing_models/c290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCampaignBillingModelListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.campaign.billing_model.list'
        list:
          type: string
          example: ChannelBillingModel
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelBillingModel'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/campaigns/d290f1ee-6c54-4b01-90e6-d701748f0851/billing_models

    ChannelCampaignBillingModelRequest:
      description: |
        Channel BillingModel request body JSON object
      type: object
      properties:
        model_uuid:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851



    # ChannelOrder
    ChannelOrderGetResponse:
      description: |
        Channel Order JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.order.get'
        object:
          type: string
          example: ChannelOrder
        data:
          $ref: '#/components/schemas/ChannelOrder'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/orders/o290f1ee-6c54-4b01-90e6-d701748f0851
    ChannelOrderListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.order.list'
        list:
          type: string
          example: ChannelOrder
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelOrder'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/orders/o290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelOrderItemListResponse:
      description: |
        List of Customer Order Items
      type: object
      properties:
        action:
          type: string
          example: 'channel.order.item.list'
        list:
          type: string
          example: ChannelOrderItem
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelOrderItem'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/orders/o290f1ee-6c54-4b01-90e6-d701748f0851/items
    ChannelOrderItemGetResponse:
      description: |
        Channel Order Item JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.order.item.get'
        object:
          type: string
          example: ChannelOrderItem
        data:
          $ref: '#/components/schemas/ChannelOrderItem'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/orders/o290f1ee-6c54-4b01-90e6-d701748f0851/item/v290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelOrder:
      description: |
        A Channel Order is a colleciton of items that can be sent to a checkout, including Billing information, Shipping information, a Channel Customer and a Channel User.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        order_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        customer_uuid:
          type: string
          format: uuid
          example: cc90f1ee-6c54-4b01-90e6-d701748f0851
        handle:
          type: string
          example: my-awesome-product
        note:
          type: string
          example: Deliver to Back porch
        # note_attribues:
        #   type: object
        #   example:
        status:
          type: string
          example: open
        currency:
          type: string
          example: USD
        lines_discounted:
          type: array
          items:
            type: object
          example: []
        lines_coupons:
          type: array
          items:
            type: object
          example: []
        lines_shipping:
          type: array
          items:
            type: object
          example: []
        lines_taxes:
          type: array
          items:
            type: object
          example: []
        lines_pricing_overrides:
          type: array
          items:
            type: object
          example: []
        is_shipping_included:
          type: boolean
        shipping_rates:
          type: array
          items:
            type: object
          example: []
        has_subscription:
          type: boolean
        has_shipping:
          type: boolean
        has_taxes:
          type: boolean
        has_shipping_taxes:
          type: boolean
        is_tax_included:
          type: boolean
        total_discounts:
          type: integer
          example: 100
        total_coupons:
          type: integer
          example: 100
        total_pricing_overrides:
          type: integer
          example: 100
        total_line_items_price:
          type: integer
          example: 100
        total_price:
          type: integer
          example: 100
        total_due:
          type: integer
          example: 100
        total_shipping:
          type: integer
          example: 100
        total_tax:
          type: integer
          example: 100
        total_weight:
          type: integer
          example: 100
        reservation_time:
          type: integer
          example: 100
        checked_out:
          type: boolean
          example: false
        checked_out_at:
          type: string
        closed:
          type: boolean
          example: false
        closed_at:
          type: string
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChannelOrderItem'

    ChannelOrderItem:
      description: |
        A Single Order Item JSON object
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        order_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        item_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        sku:
          type: string
          example: sku-123
        title:
          type: string
          example: My Awesome Product
        price:
          type: number
          example: 1000
        price_calculated:
          type: number
          example: 999
        price_compare_at:
          type: number
          example: 1500
        currency:
          type: string
          example: USD
        option:
          type: object
          example: {'size': 'Large'}
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelOrderWhereQuery:
      description: |
        A Query that can be passed as a "where" url query object for filtering responses.
      type: object
      properties:
        title:
          type: string
          example: Awesome Product
        price:
          type: number
          example: 1000



    # ChannelFeed
    ChannelFeedGetResponse:
      description: |
        Channel Feed JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.feed.get'
        object:
          type: string
          example: ChannelFeed
        data:
          $ref: '#/components/schemas/ChannelFeed'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/feeds/o290f1ee-6c54-4b01-90e6-d701748f0851
    ChannelFeedListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.feed.list'
        list:
          type: string
          example: ChannelFeed
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelFeed'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/feeds/o290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelFeedItemListResponse:
      description: |
        List of Channel Feed Items
      type: object
      properties:
        action:
          type: string
          example: 'channel.feed.item.list'
        list:
          type: string
          example: ChannelFeedItem
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelFeedItem'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/feeds/o290f1ee-6c54-4b01-90e6-d701748f0851/items
    ChannelFeedItemGetResponse:
      description: |
        Channel Feed Item JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.feed.item.get'
        object:
          type: string
          example: ChannelFeedItem
        data:
          $ref: '#/components/schemas/ChannelFeedItem'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/feeds/o290f1ee-6c54-4b01-90e6-d701748f0851/item/v290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelFeedItemCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.feed.item.created
        object:
          type: string
          example: ChannelFeedItem
        data:
          $ref: '#/components/schemas/ChannelFeedItem'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/feeds/f290f1ee-6c54-4b01-90e6-d701748f0851/items/i290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelFeedItemCreateRequest:
      description: |
        Channel Feed Item request body JSON object
      type: object
      properties:
        message:
          type: string
          example: Isn't RiSE super cool?!

    ChannelFeedItemUpdateRequest:
      description: |
        Channel Feed Item request body JSON object
      type: object
      properties:
        message:
          type: string
          example: Isn't RiSE really super cool?!

    ChannelFeed:
      description: |
        A Channel Feed a conversation between Channel Users.
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        feed_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        handle:
          type: string
          example: my-awesome-product
        title:
          type: string
          example: General
        description:
          type: string
          example: General Channel Discussion
        published:
          type: boolean
          example: true
        published_scope:
          description: |
            The scope of the feed, as either: global, local, private
          type: string
          example: local
        published_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelFeedItem:
      description: |
        A Single Feed Item JSON object
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        feed_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        item_uuid:
          description: |
            The unique id of this feed item
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        user_uuid:
          type: string
          format: uuid
          example: u290f1ee-6c54-4b01-90e6-d701748f0851
        is_editable:
          type: boolean
          example: true
        topic:
          type: string
          example: general
        item_type:
          type: string
          example: general
        object:
          type: string
          example: FeedItem
        message:
          type: string
          example: Look how many amazing customers we have!
        data:
          type: object
        metadata:
          type: object
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelFeedWhereQuery:
      description: |
        A Query that can be passed as a "where" url query object for filtering responses.
      type: object
      properties:
        title:
          type: string
          example: General

    ChannelFeedItemWhereQuery:
      description: |
        A Query that can be passed as a "where" url query object for filtering responses.
      type: object
      properties:
        topic:
          type: string
          example: products






    # ChannelCountry
    ChannelCountryGetResponse:
      description: |
        Channel Country JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.country.get'
        object:
          type: string
          example: ChannelCountry
        data:
          $ref: '#/components/schemas/ChannelCountry'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/countries/o290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCountryListResponse:
      type: object
      properties:
        action:
          type: string
          example: 'channel.country.list'
        list:
          type: string
          example: ChannelCountry
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCountry'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/countries/o290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCountryProvinceListResponse:
      description: |
        List of Channel Country Provinces
      type: object
      properties:
        action:
          type: string
          example: 'channel.country.province.list'
        list:
          type: string
          example: ChannelCountryProvince
        data:
          type: array
          items:
            $ref: '#/components/schemas/ChannelCountryProvince'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/countries/o290f1ee-6c54-4b01-90e6-d701748f0851/provinces
    ChannelCountryProvinceGetResponse:
      description: |
        Channel Country Province JSON object
      type: object
      properties:
        action:
          type: string
          example: 'channel.country.province.get'
        object:
          type: string
          example: ChannelCountryProvince
        data:
          $ref: '#/components/schemas/ChannelCountryProvince'
        url:
          type: string
          example: api/v1/channels/c290f1ee-6c54-4b01-90e6-d701748f0851/countries/o290f1ee-6c54-4b01-90e6-d701748f0851/province/v290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCountryProvinceCommandResponse:
      type: object
      properties:
        event_type:
          type: string
          example: channel.country.province.created
        object:
          type: string
          example: ChannelCountryProvince
        data:
          $ref: '#/components/schemas/ChannelCountryProvince'
        url:
          type: string
          example: api/v1/channels/d290f1ee-6c54-4b01-90e6-d701748f0851/countries/f290f1ee-6c54-4b01-90e6-d701748f0851/provinces/i290f1ee-6c54-4b01-90e6-d701748f0851

    ChannelCountryProvinceCreateRequest:
      description: |
        Channel Country Province request body JSON object
      type: object
      properties:
        message:
          type: string
          example: Isn't RiSE super cool?!

    ChannelCountryProvinceUpdateRequest:
      description: |
        Channel Country Province request body JSON object
      type: object
      properties:
        message:
          type: string
          example: Isn't RiSE really super cool?!

    ChannelCountry:
      description: |
        A Channel Country for new Customers and Restrictions
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        country_code:
          type: string
          example: US
        name:
          type: string
          example: United States
        description:
          type: string
          example: General Channel Discussion
        published:
          type: boolean
          example: true
        published_scope:
          description: |
            The scope of the country, as either: global, local, private
          type: string
          example: local
        published_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCountryProvince:
      description: |
        A Single Country Province JSON object
      type: object
      properties:
        channel_uuid:
          type: string
          format: uuid
          example: c290f1ee-6c54-4b01-90e6-d701748f0851
        country_code:
          type: string
          example: US
        province_code:
          description: |
            The unique id of this country province
          type: string
          example: IN
        name:
          type: string
          example: Indiana
        live_mode:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'
        updated_at:
          type: string
          example: '2019-04-17 09:10:26.889-07'

    ChannelCountryWhereQuery:
      description: |
        A Query that can be passed as a "where" url query object for filtering responses.
      type: object
      properties:
        title:
          type: string
          example: General

    ChannelCountryProvinceWhereQuery:
      description: |
        A Query that can be passed as a "where" url query object for filtering responses.
      type: object
      properties:
        topic:
          type: string
          example: products          
